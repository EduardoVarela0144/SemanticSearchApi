{
  "openapi": "3.0.3",
  "info": {
    "title": "Razonamiento neuronal de dominio abierto para la reconstrucción e inferencia de conocimiento",
    "description": "El objetivo de este proyecto es desarrollar modelos de Inteligencia Artificial (IA) para la reconstrucción y creación de conocimiento (razonamiento neuronal) en temas abiertos relevantes para tres enfermedades respiratorias: cáncer de pulmón, fibrosis pulmonar y enfermedad respiratoria obstructiva crónica. Además, se creará una aplicación web para proporcionar a los usuarios de Internet un servicio de guía para navegación y visualización semántica de alto detalle.\n\nColaboradores:\n- [Dr.Ignacio Arroyo Fernández](https://www.linkedin.com/in/iarroyof/)\n- [Eduardo Varela Hernández](https://www.linkedin.com/in/eduardo-varela-h/)\n- [Luis Felipe Morale Calvo](https://www.linkedin.com/in/luisfemorales/)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:5000"
    }
  ],
  "tags": [
    {
      "name": "Article",
      "description": "NCBI repository articles"
    }
  ],
  "paths": {
    "/articles/get_all_articles": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Get all articles",
        "description": "Returns a all articles",
        "operationId": "getArticles",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Article not found"
          }
        }
      }
    },
    "/articles": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Get all articles",
        "description": "Returns a single Article",
        "operationId": "getArticle",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Article not found"
          }
        }
      },
      "put": {
        "tags": [
          "Article"
        ],
        "summary": "Update an existing Article",
        "description": "Update an existing Article by Id",
        "operationId": "updateArticle",
        "requestBody": {
          "description": "Update an existent Article in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Article"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Article"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Article"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Article not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "tags": [
          "Article"
        ],
        "summary": "Add a new Article to the store",
        "description": "Add a new Article to the store",
        "operationId": "addArticle",
        "requestBody": {
          "description": "Create a new Article in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Article"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Article"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Article"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/Article/{ArticleId}": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Find Article by ID",
        "description": "Returns a single Article",
        "operationId": "getArticleById",
        "parameters": [
          {
            "name": "ArticleId",
            "in": "path",
            "description": "ID of Article to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Article not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Article"
        ],
        "summary": "Deletes a Article",
        "description": "delete a Article",
        "operationId": "deleteArticle",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ArticleId",
            "in": "path",
            "description": "Article id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Article value"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Article": {
        "required": [
          "name",
          "photoUrls"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "photoUrl"
              }
            }
          },
          "status": {
            "type": "string",
            "description": "Article status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "Article"
        }
      }
    },
    "requestBodies": {
      "Article": {
        "description": "Article object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Article"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Article"
            }
          }
        }
      }
    }
  }
}