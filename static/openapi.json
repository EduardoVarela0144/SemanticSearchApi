{
  "openapi": "3.0.3",
  "info": {
    "title": "Open-domain neural reasoning for reconstruction and inference of knowledge",
    "description": "The objective of this project is to develop Artificial Intelligence (AI) models for the reconstruction and creation of knowledge (neural reasoning) on open topics relevant to three respiratory diseases: lung cancer, pulmonary fibrosis and chronic obstructive respiratory disease. In addition, a web application will be created to provide Internet users with guidance for navigation and high-detail semantic visualization.\n\nCollaborators:\n- [Dr.Ignacio Arroyo Fernández](https://www.linkedin.com/in/iarroyof/)\n- [Eduardo Varela Hernández](https://www.linkedin.com/in/eduardo-varela-h/)\n- [Luis Felipe Morale Calvo](https://www.linkedin.com/in/luisfemorales/)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://192.100.170.206:5000"
    },
    {
      "url": "http://127.0.0.1:5000"
    }
  ],
  "tags": [
    {
      "name": "Article",
      "description": "Scientific articles"
    },
    {
      "name": "Triplets",
      "description": "Triplets"
    },
    {
      "name": "Users",
      "description": "Authentication"
    }
  ],
  "paths": {
    "/article/get_all_articles": {
      "get": {
        "tags": [
          "Article"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "List all articles",
        "description": "Returns all articles",
        "operationId": "getArticles",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/article/articles_semantic_search": {
      "get": {
        "tags": [
          "Article"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Article semantic search",
        "description": "A semantic search is performed on the articles",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Semantic search query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "top_k",
            "in": "query",
            "description": "K (K neighbors)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10"
            }
          },
          {
            "name": "candidates",
            "in": "query",
            "description": "Candidates",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 500
            }
          }
        ],
        "operationId": "getArticlesSemantic",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/article/analyze_article": {
      "get": {
        "tags": [
          "Article"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Triplets extraction",
        "description": "Triplets extraction from a single article. The article MUST already be on the database.",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "article_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threads",
            "in": "query",
            "description": "CoreNlp threads",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 16
            }
          },
          {
            "name": "memory",
            "in": "query",
            "description": "CoreNlp memory",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 4
            }
          }
        ],
        "operationId": "analyze_article",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/article/analyze_all_articles": {
      "get": {
        "tags": [
          "Article"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Bulk triplets extraction",
        "description": "Triplets extraction from all the articles",
        "parameters": [
          {
            "name": "threads",
            "in": "query",
            "description": "CoreNlp threads",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 16
            }
          },
          {
            "name": "memory",
            "in": "query",
            "description": "CoreNlp memory",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 4
            }
          }
        ],
        "operationId": "analyze_all_articles",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/article/post_articles_from_folder/{path_folder}": {
      "post": {
        "tags": [
          "Article"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Add articles to the database",
        "description": "Articles MUST be in a TXT file inside the selected folder, they'll be formatted into JSON and storaged in the database.",
        "parameters": [
          {
            "name": "path_folder",
            "in": "path",
            "description": "Articles folder",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "addArticleFromFolder",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/article": {
      "post": {
        "tags": [
          "Article"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Create new article",
        "operationId": "addArticle",
        "requestBody": {
          "description": "Create new article",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Article"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/article/{article_id}": {
      "get": {
        "tags": [
          "Article"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Get article by ID",
        "operationId": "getArticleById",
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "required": true,
            "description": "Article Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Éxito",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Article"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Update article by ID",
        "operationId": "updateArticleById",
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "required": true,
            "description": "Article Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update the metadata of an existing article",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "authors": {
                    "type": "string"
                  },
                  "journal": {
                    "type": "string"
                  },
                  "issn": {
                    "type": "string"
                  },
                  "doi": {
                    "type": "string"
                  },
                  "pmc_id": {
                    "type": "string"
                  },
                  "keys": {
                    "type": "string"
                  },
                  "abstract": {
                    "type": "string"
                  },
                  "objectives": {
                    "type": "string"
                  },
                  "methods": {
                    "type": "string"
                  },
                  "results": {
                    "type": "string"
                  },
                  "conclusion": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Article"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Delete article by ID",
        "operationId": "deleteArticleById",
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "required": true,
            "description": "Article Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/triplet/get_all_triplets": {
      "get": {
        "tags": [
          "Triplets"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "List all triplets",
        "description": "Returns all triplets",
        "operationId": "getTriplets",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/triplet/download_triplets_csv": {
      "get": {
        "tags": [
          "Triplets"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Download triplets in a CSV file",
        "description": "Download triplets in a CSV file",
        "operationId": "download_triplets_csv",
        "responses": {
          "200": {
            "description": "Download CSV file",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                },
                "example": "CSV file content"
              }
            }
          }
        }
      }
    },
    "/triplet/download_triplets_sql": {
      "get": {
        "tags": [
          "Triplets"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Download SQL script",
        "description": "Download SQL script",
        "operationId": "download_sql_script",
        "responses": {
          "200": {
            "description": "Download SQL script",
            "content": {
              "application/sql": {
                "schema": {
                  "type": "string"
                },
                "example": "SQL script content"
              }
            }
          }
        }
      }
    },
    "/triplet/triplets_semantic_search": {
      "get": {
        "tags": [
          "Triplets"
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Triplets semantic search",
        "description": "A semantic search is performed on the articles triplets",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Semantic search query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "top_k",
            "in": "query",
            "description": "K (K neighbors)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "candidates",
            "in": "query",
            "description": "Candidates",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 500
            }
          }
        ],
        "operationId": "triplets_semantic_search",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User login",
        "description": "Log in with existing user credentials",
        "operationId": "loginUser",
        "requestBody": {
          "description": "User login data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "example": {
                  "access_token": "your_access_token_here",
                  "email": "user@example.com",
                  "lastname": "User Lastname",
                  "message": "Login successful",
                  "name": "User",
                  "user_id": "user_id_here"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "/user/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User registration",
        "description": "Register a new user",
        "operationId": "registerUser",
        "requestBody": {
          "description": "User registration data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "lastname",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "User registered successfully"
                }
              }
            }
          },
          "400": {
            "description": "Incomplete user data or email already registered",
            "content": {
              "application/json": {
                "example": {
                  "error": "Incomplete user data or email already registered"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Article": {
        "required": [
          "title",
          "authors",
          "journal",
          "issn",
          "doi",
          "pmc_id",
          "keys",
          "abstract",
          "objectives",
          "methods",
          "content",
          "results",
          "conclusion",
          "file",
          "path"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "authors": {
            "type": "string"
          },
          "journal": {
            "type": "string"
          },
          "issn": {
            "type": "string"
          },
          "doi": {
            "type": "string"
          },
          "pmc_id": {
            "type": "string"
          },
          "keys": {
            "type": "string"
          },
          "abstract": {
            "type": "string"
          },
          "objectives": {
            "type": "string"
          },
          "methods": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "results": {
            "type": "string"
          },
          "conclusion": {
            "type": "string"
          },
          "file": {
            "type": "string",
            "format": "binary"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "TripletsData": {
        "type": "object",
        "properties": {
          "sentence_text": {
            "type": "string"
          },
          "sentence_text_vector": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          },
          "triplets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "subject": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string"
                    }
                  }
                },
                "relation": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string"
                    }
                  }
                },
                "object": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "TripletsMapping": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "string"
          },
          "article_title": {
            "type": "string"
          },
          "data_analysis": {
            "type": "object",
            "properties": {
              "sentence_text": {
                "type": "string"
              },
              "sentence_text_vector": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "float"
                }
              },
              "triplets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TripletsData"
                }
              }
            }
          }
        }
      },
      "TripletsVectorMapping": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "string"
          },
          "sentence_text": {
            "type": "string"
          },
          "sentence_text_vector": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "BearerToken"
      }
    }
  },
  "security": [
    {
      "bearerToken": []
    }
  ]
}